<?php
/*
 * TelstraMessagingAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace TelstraMessagingAPILib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class SendSMSRequest implements JsonSerializable
{
    /**
     * Phone number (in E.164 format) to send the SMS to. This number
     * can be in international format if preceeded by a ‘+’, or in national format.
     * @required
     * @var string $to public property
     */
    public $to;

    /**
     * The text body of the message. Messages longer than 160 characters
     * will be counted as multiple messages.
     * @required
     * @var string $body public property
     */
    public $body;

    /**
     * Phone number (in E.164 format) the SMS was sent from. If not
     * present, the serverice will use the mobile number associated with the application,
     * or it be an Alphanumeric address of up to 11 characters.
     * @var string|null $from public property
     */
    public $from;

    /**
     * How long the platform should attempt to deliver the message for.
     * This period is specified in minutes from the message
     * @var integer|null $validity public property
     */
    public $validity;

    /**
     * How long the platform should wait before attempting to send the
     * message - specified in minutes.
     * @var integer|null $scheduledDelivery public property
     */
    public $scheduledDelivery;

    /**
     * Contains a URL that will be called once your message has been
     * processed. The status may be delivered, expired, deleted, etc.
     * @var string|null $notifyURL public property
     */
    public $notifyURL;

    /**
     * If set to true, the reply message functionality will be implemented
     * and the to address will be ignored if present. If false or not present,
     * then normal message handling is implemented.
     * @var bool|null $replyRequest public property
     */
    public $replyRequest;

    /**
     * Constructor to set initial or default values of member properties
     * @param string  $to                Initialization value for $this->to
     * @param string  $body              Initialization value for $this->body
     * @param string  $from              Initialization value for $this->from
     * @param integer $validity          Initialization value for $this->validity
     * @param integer $scheduledDelivery Initialization value for $this->scheduledDelivery
     * @param string  $notifyURL         Initialization value for $this->notifyURL
     * @param bool    $replyRequest      Initialization value for $this->replyRequest
     */
    public function __construct()
    {
        if (7 == func_num_args()) {
            $this->to                = func_get_arg(0);
            $this->body              = func_get_arg(1);
            $this->from              = func_get_arg(2);
            $this->validity          = func_get_arg(3);
            $this->scheduledDelivery = func_get_arg(4);
            $this->notifyURL         = func_get_arg(5);
            $this->replyRequest      = func_get_arg(6);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['to']                = $this->to;
        $json['body']              = $this->body;
        $json['from']              = $this->from;
        $json['validity']          = $this->validity;
        $json['scheduledDelivery'] = $this->scheduledDelivery;
        $json['notifyURL']         = $this->notifyURL;
        $json['replyRequest']      = $this->replyRequest;

        return $json;
    }
}
